"""Author: Franklin FlorescaDate: July 1, 2017About: A simple game of hangman where a user has a maximum of 6 failed attempts to guess the correct letters for a word.Note: The following code was written following the directions as laid out by Albert Sweigart in one of his Invent With Python books.    """import random# a user gets a total of 6 tries as depicted by the pictures# during every turn, a user is shown a picture of the 'hangman'HANGMANPICS = ['''  +---+  |   |      |      |      |      |=========''', '''  +---+  |   |  O   |      |      |      |=========''', '''  +---+  |   |  O   |  |   |      |      |=========''', '''  +---+  |   |  O   | /|   |      |      |=========''', '''  +---+  |   |  O   | /|\  |      |      |=========''', '''  +---+  |   |  O   | /|\  | /    |      |=========''', '''  +---+  |   |  O   | /|\  | / \  |      |=========''']def intro():  print('Welcome to H A N G M A N!')  print('Guess the letters in the word.')  print('If the guessed letter is not in the word,')  print('another part is added to the hangman. If')  print('all parts of the hangman are connected you lose')  print('If all letters are guessed correctly, you win!')  print('Good luck!')# a word bank in the form of a dictionary# there are 4 different categories of words, subdivided by the key names# each key is assigned an array that came as a result from the split method being used on a stringwords = {'Shapes':'square triangle rectangle circle ellipse rhombus trapezoid chevron pentagon hexagon septagon octagon'.split(), 'Colors':'red orange yellow green blue indigo violet white black brown'.split(), 'Fruits':'apple orange lemon lime pear watermelon grape grapefruit cherry banana cantaloupe mango strawberry tomato'.split(), 'Animals':'bat bear beaver cat cougar crab deer dog donkey duck eagle fish frog goat leech lion lizard monkey moose mouse otter owl panda python rabbit rat shark sheep skunk squid tiger turkey turtle weasel whale wolf wombat zebra'.split()}def genRandomWord(dict):    # randomly choose a key from the 'words' dictionary  randomVal = random.choice(list(dict.keys()))    # then, get a random index of the key's array  dictIndex = random.randint(0,len(dict[randomVal])-1)  # return a random word and the category of the word  return [dict[randomVal][dictIndex],randomVal]def displayBoard(hmpics, missedLetters, correctLetters, secretWord):    # print the picture of the hangman that corresponds to the amount of incorrect letters inputted  print(hmpics[len(missedLetters)])  print()    # print the incorrect letters  print('Incorrect Letters: ', end='')  for letter in missedLetters:    print(letter,end='')  print()    # create a string variable with the same amount of underscores as there are letters in the random word  blanks = '_'*len(secretWord)    # replace correctly guessed letters into the corresponding spaces of the underscore string  for i in range(len(secretWord)):    if secretWord[i] in correctLetters:      blanks = blanks[:i] + secretWord[i] + blanks[i+1:]    # print out the word with the correctly guessed letters and blanks  for letter in blanks:    print(letter, end='')  print()def getGuess(alreadyGuessed):    # prompt a user to guess a single letter that hasn't been guessed yet  while True:    print('Guess a letter.')    guess = input()    guess = guess.lower()    if len(guess) != 1:      print('Please enter a single letter.')    elif guess in alreadyGuessed:      print('You have already guessed that letter. Choose again.')    elif guess not in 'abcdefghijklmnopqrstuvwxyz':      print('Please enter a letter.')    else:      return guessdef playAgain():    # prompt to play again or not  print('Do you want to play again? (yes or no)')  return input().lower().startswith('y')missedLetters= ''correctLetters= ''secretWord, secretKey = genRandomWord(words)gameIsDone = False;# main script of the applicationintro()while True:  print('The secret word is in the set:' + secretKey)  displayBoard(HANGMANPICS,missedLetters,correctLetters,secretWord)  guess= getGuess(missedLetters + correctLetters)  if guess in secretWord:    correctLetters = correctLetters + guess    foundAllLetters = True    for i in range(len(secretWord)):      if secretWord[i] not in correctLetters:        foundAllLetters = False        break    if foundAllLetters:      print('Yes! The secret word is "'+ secretWord + '"! You have won!')      gameIsDone = True  else:    missedLetters = missedLetters + guess    if len(missedLetters) == len(HANGMANPICS)-1:      displayBoard(HANGMANPICS,missedLetters,correctLetters,secretWord)      print('You have run out of guesses!\nAfter ' + str(len(missedLetters)) + ' missed guesses and ' + str(len(correctLetters)) + ' correct guesses, the word was "' + secretWord + '"')      gameIsDone = True    if gameIsDone:      if playAgain():        missedLetters =''        correctLetters=''        gameIsDone= False        secretWord, secretKey = genRandomWord(words)      else:        break